from sklearn.model_selection import KFold, cross_validate

from keras.backend import clear_session
from keras.models import Sequential
from keras.layers import Dense, Activation, Dropout
from keras.optimizer_v2 import adam
from keras.wrappers.scikit_learn import KerasClassifier

from FileDataRead import *


# グローバル変数:チューニング済パラメータ
g_study_obj = None


# 機械学習モデル作成処理関数
def build_model():
    estimator = Sequential()
    estimator.add(Dense(2048, activation='relu', input_dim=2381))
    estimator.add(Dense(1024, activation='relu'))

    estimator.add(Dropout(rate=g_study_obj.best_params['dropout_rate']))
    estimator.add(Dense(1024, activation='relu'))
    estimator.add(Dense(1, activation='sigmoid'))

    optimizer = adam.Adam(learning_rate=g_study_obj.best_parms['learning_rate'],
                          beta_1=g_study_obj.best_params['beta_1'],
                          beta_2=g_study_obj.best_params['beta_2'])

    estimator.compile(loss='binary_crossentropy', optimizer=optimizer,metrics=['accuracy'])

    return estimator


# 機械学習処理関数(エントリポイント関数)
def machine_learning_malware_data(data_file_dir, study_obj):

    # グローバル変数に引数のチューニング済パラメータをセット
    global g_study_obj
    g_study_obj = study_obj

    print("start KerasClassifier")

    estimator = KerasClassifier(
        build_model,
        epochs=5,
        batch_size=256,
        verbose=1
    )

    # データ読み込み処理
    x_train, y_train, x_test, y_test = read_file_data(data_file_dir)

    print("read data")

    # 機械学習実行
    result = cross_validate(estimator, x_train, y_train, cv=5)

    print("cross_validate end")

    # 処理結果出力
    print('Test accuracy:', result['test_score'].mean())

    return estimator

